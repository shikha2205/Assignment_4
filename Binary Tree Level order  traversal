class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>>result=new ArrayList<>();
        Queue<TreeNode>queue=new LinkedList<TreeNode>();
        if(root==null){
            return result;
        }        
        queue.offer(root);
        while(!queue.isEmpty()){
            int levelnum=queue.size();
            List<Integer>sublist=new ArrayList<>();
            for(int i=0;i<levelnum;i++){
                if(queue.peek().left!=null){
                    queue.offer(queue.peek().left);

                }
                if(queue.peek().right!=null){
                    queue.offer(queue.peek().right);
                }
                sublist.add(queue.poll().val);
            }
            result.add(sublist);
            
        }
        return result;
    }
}
